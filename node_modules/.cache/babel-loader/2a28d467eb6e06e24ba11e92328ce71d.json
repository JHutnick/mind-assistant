{"ast":null,"code":"import { HEROKU_URL } from \"../const/Constants\";\n\nclass userService {\n  constructor() {\n    this.url = HEROKU_URL + \"/users\";\n\n    this.findUserById = userId => {\n      return fetch(`${this.url}/${userId}`).then(response => response.json());\n    };\n\n    this.createUser = user => {\n      return fetch(this.url, {\n        method: \"POST\",\n        body: JSON.stringify(user),\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        credentials: \"include\"\n      }).then(response => response.json());\n    };\n\n    this.updateUser = (userId, user) => {\n      return fetch(`${this.url}/${userId}`, {\n        method: \"PUT\",\n        body: JSON.stringify(user),\n        headers: {\n          \"content-type\": \"application/json\"\n        }\n      }).then(response => response.json());\n    };\n\n    this.deleteUser = userId => {\n      return fetch(`${this.url}/${userId}`, {\n        method: \"DELETE\"\n      }).then(response => response.json());\n    };\n\n    this.findAllUsers = () => {\n      return fetch(this.url).then(response => response.json());\n    };\n  }\n\n}\n\nexport default userService;","map":{"version":3,"sources":["/home/davischandram/webdev/cs5610/fork/mind-assistant/src/services/userService.js"],"names":["HEROKU_URL","userService","url","findUserById","userId","fetch","then","response","json","createUser","user","method","body","JSON","stringify","headers","credentials","updateUser","deleteUser","findAllUsers"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,oBAAzB;;AAEA,MAAMC,WAAN,CAAkB;AAAA;AAAA,SACdC,GADc,GACRF,UAAU,GAAG,QADL;;AAAA,SAGdG,YAHc,GAGEC,MAAD,IAAY;AACvB,aAAOC,KAAK,CAAE,GAAE,KAAKH,GAAI,IAAGE,MAAO,EAAvB,CAAL,CAA+BE,IAA/B,CAAoCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAAhD,CAAP;AACH,KALa;;AAAA,SAOdC,UAPc,GAOAC,IAAD,IAAU;AACnB,aAAOL,KAAK,CAAC,KAAKH,GAAN,EAAW;AACnBS,QAAAA,MAAM,EAAE,MADW;AAEnBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAFa;AAGnBK,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAHU;AAMnBC,QAAAA,WAAW,EAAE;AANM,OAAX,CAAL,CAOJV,IAPI,CAOCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPb,CAAP;AAQH,KAhBa;;AAAA,SAkBdS,UAlBc,GAkBD,CAACb,MAAD,EAASM,IAAT,KAAkB;AAC3B,aAAOL,KAAK,CAAE,GAAE,KAAKH,GAAI,IAAGE,MAAO,EAAvB,EAA0B;AAClCO,QAAAA,MAAM,EAAE,KAD0B;AAElCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAF4B;AAGlCK,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AAHyB,OAA1B,CAAL,CAMJT,IANI,CAMCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANb,CAAP;AAOH,KA1Ba;;AAAA,SA4BdU,UA5Bc,GA4BAd,MAAD,IAAY;AACrB,aAAOC,KAAK,CAAE,GAAE,KAAKH,GAAI,IAAGE,MAAO,EAAvB,EAA0B;AAClCO,QAAAA,MAAM,EAAE;AAD0B,OAA1B,CAAL,CAEJL,IAFI,CAECC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAFb,CAAP;AAGH,KAhCa;;AAAA,SAkCdW,YAlCc,GAkCC,MAAM;AACjB,aAAOd,KAAK,CAAC,KAAKH,GAAN,CAAL,CAAgBI,IAAhB,CAAqBC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAAjC,CAAP;AACH,KApCa;AAAA;;AAAA;;AAuClB,eAAeP,WAAf","sourcesContent":["import {HEROKU_URL} from \"../const/Constants\";\n\nclass userService {\n    url = HEROKU_URL + \"/users\";\n\n    findUserById = (userId) => {\n        return fetch(`${this.url}/${userId}`).then(response => response.json())\n    };\n\n    createUser = (user) => {\n        return fetch(this.url, {\n            method: \"POST\",\n            body: JSON.stringify(user),\n            headers: {\n                \"content-type\": \"application/json\"\n            },\n            credentials: \"include\"\n        }).then(response => response.json())\n    };\n\n    updateUser = (userId, user) => {\n        return fetch(`${this.url}/${userId}`, {\n            method: \"PUT\",\n            body: JSON.stringify(user),\n            headers: {\n                \"content-type\": \"application/json\"\n            }\n        }).then(response => response.json())\n    };\n\n    deleteUser = (userId) => {\n        return fetch(`${this.url}/${userId}`, {\n            method: \"DELETE\"\n        }).then(response => response.json())\n    };\n\n    findAllUsers = () => {\n        return fetch(this.url).then(response => response.json())\n    };\n}\n\nexport default userService"]},"metadata":{},"sourceType":"module"}