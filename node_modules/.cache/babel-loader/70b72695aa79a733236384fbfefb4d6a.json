{"ast":null,"code":"var _jsxFileName = \"/home/davischandram/webdev/cs5610/mind-assistant/src/components/label/LabelListComponent.js\";\nimport React from 'react';\nimport LabelComponent from './LabelComponent';\nimport '../../App.css';\nimport { findCurrentUser } from \"../../actions/userActions\";\nimport { connect } from \"react-redux\";\nimport userService from \"../../services/userService\";\nimport labelService from \"../../services/labelService\";\nimport { findLabelsForGroup } from \"../../actions/labelActions\";\nconst UserService = new userService();\nconst LabelService = new labelService();\n\nclass LabelListComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.createLabel = () => {\n      this.state.label.id = new Date().getTime();\n      this.setState({\n        labels: [this.state.label, ...this.state.labels]\n      });\n    };\n\n    this.titleChanged = event => {\n      this.setState({\n        label: {\n          title: event.target.value\n        }\n      });\n    };\n\n    this.deleteLabel = id => {\n      this.setState({\n        labels: this.state.labels.filter(label => label.id !== id)\n      });\n    };\n\n    this.state = {\n      user: {},\n      label: {\n        id: -1,\n        title: 'New Label'\n      },\n      labels: [{\n        id: 123,\n        title: \"Label 1\"\n      }, {\n        id: 124,\n        title: \"Label 2\"\n      }, {\n        id: 125,\n        title: \"Label 3\"\n      }]\n    };\n  }\n\n  componentDidMount() {\n    this.props.findCurrentUser();\n    this.props.findLabelsForUser(this.props.user.id);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.state.labels && this.state.labels.map(label => React.createElement(\"div\", {\n      key: label.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(LabelComponent, {\n      label: label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.titleChanged,\n      className: \"form-control\",\n      placeholder: \"New Label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.createLabel,\n      className: \"btn btn-primary btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Add Label\")));\n  }\n\n}\n\nconst stateToPropertyMapper = state => ({\n  user: state.user.user,\n  labels: state.labels.labels\n});\n\nconst dispatchToPropertyMapper = dispatch => ({\n  findCurrentUser: () => {\n    UserService.findCurrentUser().then(user => {\n      dispatch(findCurrentUser(user));\n    });\n  },\n  findLabelsForUser: userId => {\n    LabelService.findLabelsForUser(userId).then(labels => {\n      dispatch(findLabelsForGroup(labels));\n    });\n  }\n});\n\nexport default connect(stateToPropertyMapper, dispatchToPropertyMapper)(LabelListComponent);","map":{"version":3,"sources":["/home/davischandram/webdev/cs5610/mind-assistant/src/components/label/LabelListComponent.js"],"names":["React","LabelComponent","findCurrentUser","connect","userService","labelService","findLabelsForGroup","UserService","LabelService","LabelListComponent","Component","constructor","props","createLabel","state","label","id","Date","getTime","setState","labels","titleChanged","event","title","target","value","deleteLabel","filter","user","componentDidMount","findLabelsForUser","render","map","stateToPropertyMapper","dispatchToPropertyMapper","dispatch","then","userId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport LabelComponent from './LabelComponent';\nimport '../../App.css';\nimport {findCurrentUser} from \"../../actions/userActions\";\nimport {connect} from \"react-redux\";\nimport userService from \"../../services/userService\";\nimport labelService from \"../../services/labelService\";\nimport {findLabelsForGroup} from \"../../actions/labelActions\";\n\nconst UserService = new userService();\nconst LabelService = new labelService();\n\nclass LabelListComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: {},\n            label: {\n                id: -1,\n                title: 'New Label'\n            },\n            labels: [\n                {id: 123, title: \"Label 1\"},\n                {id: 124, title: \"Label 2\"},\n                {id: 125, title: \"Label 3\"}\n            ]\n        }\n    }\n\n    componentDidMount() {\n        this.props.findCurrentUser();\n        this.props.findLabelsForUser(this.props.user.id)\n    }\n\n    createLabel = () => {\n        this.state.label.id = (new Date()).getTime();\n        this.setState({\n            labels: [this.state.label, ...this.state.labels]\n        })\n    };\n\n    titleChanged = (event) => {\n        this.setState({\n            label: {\n                title: event.target.value\n            }\n        })\n    };\n\n    deleteLabel = (id) => {\n        this.setState({\n            labels: this.state.labels.filter(label => label.id !== id)\n        })\n    };\n\n    render() {\n        return (\n            <div>\n                <ul className=\"list-group\">\n                    {this.state.labels && this.state.labels.map(label =>\n                        <div key={label.id}>\n                            <LabelComponent\n                                label={label}\n                            />\n                        </div>\n                    )\n                    }\n                </ul>\n                <br/>\n                <div>\n                    <input\n                        type={\"text\"}\n                        onChange={this.titleChanged}\n                        className=\"form-control\"\n                        placeholder={\"New Label\"}\n                    />\n                    <button onClick={this.createLabel}\n                            className=\"btn btn-primary btn-block\">\n                        Add Label\n                    </button>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nconst stateToPropertyMapper = (state) => ({\n    user: state.user.user,\n    labels: state.labels.labels\n});\nconst dispatchToPropertyMapper = (dispatch) => ({\n    findCurrentUser: () => {\n        UserService.findCurrentUser().then(user => {\n            dispatch(findCurrentUser(user))\n        })\n    },\n    findLabelsForUser: (userId) => {\n        LabelService.findLabelsForUser(userId).then(labels => {\n            dispatch(findLabelsForGroup(labels))\n        })\n    }\n});\nexport default connect(\n    stateToPropertyMapper,\n    dispatchToPropertyMapper\n)(LabelListComponent)"]},"metadata":{},"sourceType":"module"}