{"ast":null,"code":"var _jsxFileName = \"/home/davischandram/webdev/cs5610/mind-assistant/src/components/label/LabelListComponent.js\";\nimport React from 'react';\nimport LabelComponent from './LabelComponent';\nimport '../../App.css';\nimport { findCurrentUser } from \"../../actions/userActions\";\nimport { connect } from \"react-redux\";\nimport userService from \"../../services/userService\";\nimport labelService from \"../../services/labelService\";\nimport { createLabel, deleteLabel, findLabelsForGroup } from \"../../actions/labelActions\";\nconst UserService = new userService();\nconst LabelService = new labelService();\n\nclass LabelListComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newTitle: \"New Label\",\n      user: {},\n      label: {\n        id: -1,\n        title: 'New Label'\n      },\n      labels: [{\n        id: 123,\n        title: \"Label 1\"\n      }, {\n        id: 124,\n        title: \"Label 2\"\n      }, {\n        id: 125,\n        title: \"Label 3\"\n      }]\n    };\n\n    this.createUserLabel = () => {\n      this.props.createLabelForUser(this.props.user.id, {\n        title: this.state.newTitle\n      });\n    };\n\n    this.createFolderLabel = () => {\n      this.props.createLabelForFolder(this.props.folder.id, {\n        title: this.state.newTitle\n      });\n    };\n\n    this.titleChanged = e => {\n      this.setState({\n        newTitle: e.target.value\n      });\n    };\n\n    this.deleteLabel = id => {\n      this.props.deleteLabel(id);\n    };\n  }\n\n  componentDidMount() {\n    this.props.findCurrentUser(); // this.props.findLabelsForUser(this.props.user.id);\n\n    this.props.findLabelsForUser(2);\n    console.log(this.props.user);\n    console.log(this.props.labels);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.user !== prevState.user) {\n      console.log(this.props.user);\n      console.log(this.props.labels);\n      this.setState({\n        user: this.props.user\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.props.labels > 0 && this.props.labels.map(label => React.createElement(\"div\", {\n      key: label.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(LabelComponent, {\n      label: label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.titleChanged,\n      className: \"form-control\",\n      placeholder: \"New Label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.createUserLabel,\n      className: \"btn btn-primary btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Add Label\")));\n  }\n\n}\n\nconst stateToPropertyMapper = state => ({\n  user: state.user.user,\n  labels: state.labels.labels\n});\n\nconst dispatchToPropertyMapper = dispatch => ({\n  findCurrentUser: () => {\n    UserService.findCurrentUser().then(user => {\n      dispatch(findCurrentUser(user));\n    });\n  },\n  findLabelsForUser: userId => {\n    LabelService.findLabelsForUser(userId).then(labels => {\n      dispatch(findLabelsForGroup(labels));\n    });\n  },\n  createLabelForUser: (userId, label) => {\n    LabelService.createLabelForUser(userId, label).then(label => {\n      dispatch(createLabel(label));\n    });\n  },\n  createLabelForFolder: (folderId, label) => {\n    LabelService.createLabelForFolder(folderId, label).then(label => {\n      dispatch(createLabel(label));\n    });\n  },\n  deleteLabel: labelId => {\n    LabelService.deleteLabel(labelId).then(status => {\n      dispatch(deleteLabel(labelId));\n    });\n  }\n});\n\nexport default connect(stateToPropertyMapper, dispatchToPropertyMapper)(LabelListComponent);","map":{"version":3,"sources":["/home/davischandram/webdev/cs5610/mind-assistant/src/components/label/LabelListComponent.js"],"names":["React","LabelComponent","findCurrentUser","connect","userService","labelService","createLabel","deleteLabel","findLabelsForGroup","UserService","LabelService","LabelListComponent","Component","state","newTitle","user","label","id","title","labels","createUserLabel","props","createLabelForUser","createFolderLabel","createLabelForFolder","folder","titleChanged","e","setState","target","value","componentDidMount","findLabelsForUser","console","log","componentDidUpdate","prevProps","prevState","snapshot","render","map","stateToPropertyMapper","dispatchToPropertyMapper","dispatch","then","userId","folderId","labelId","status"],"mappings":"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","sourcesContent":["import React from 'react';\nimport LabelComponent from './LabelComponent';\nimport '../../App.css';\nimport {findCurrentUser} from \"../../actions/userActions\";\nimport {connect} from \"react-redux\";\nimport userService from \"../../services/userService\";\nimport labelService from \"../../services/labelService\";\nimport {createLabel, deleteLabel, findLabelsForGroup} from \"../../actions/labelActions\";\n\nconst UserService = new userService();\nconst LabelService = new labelService();\n\nclass LabelListComponent extends React.Component {\n    state = {\n        newTitle: \"New Label\",\n        user: {},\n        label: {\n            id: -1,\n            title: 'New Label'\n        },\n        labels: [\n            {id: 123, title: \"Label 1\"},\n            {id: 124, title: \"Label 2\"},\n            {id: 125, title: \"Label 3\"}\n        ]\n    };\n\n    componentDidMount() {\n        this.props.findCurrentUser();\n        // this.props.findLabelsForUser(this.props.user.id);\n        this.props.findLabelsForUser(2);\n        console.log(this.props.user);\n        console.log(this.props.labels);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.props.user !== prevState.user){\n            console.log(this.props.user);\n            console.log(this.props.labels);\n            this.setState({\n                user: this.props.user\n            })\n        }\n    }\n\n    createUserLabel = () => {\n        this.props.createLabelForUser(this.props.user.id, {title: this.state.newTitle})\n    };\n\n    createFolderLabel = () => {\n        this.props.createLabelForFolder(this.props.folder.id, {title: this.state.newTitle})\n    };\n\n    titleChanged = (e) => {\n        this.setState({\n            newTitle: e.target.value\n        })\n    };\n\n    deleteLabel = (id) => {\n        this.props.deleteLabel(id)\n    };\n\n    render() {\n        return (\n            <div>\n                <ul className=\"list-group\">\n                    {this.props.labels > 0 && this.props.labels.map(label =>\n                        <div key={label.id}>\n                            <LabelComponent\n                                label={label}\n                            />\n                        </div>\n                    )}\n                </ul>\n                <br/>\n                <div>\n                    <input\n                        type={\"text\"}\n                        onChange={this.titleChanged}\n                        className=\"form-control\"\n                        placeholder={\"New Label\"}\n                    />\n                    <button onClick={this.createUserLabel}\n                            className=\"btn btn-primary btn-block\">\n                        Add Label\n                    </button>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nconst stateToPropertyMapper = (state) => ({\n    user: state.user.user,\n    labels: state.labels.labels\n});\nconst dispatchToPropertyMapper = (dispatch) => ({\n    findCurrentUser: () => {\n        UserService.findCurrentUser().then(user => {\n            dispatch(findCurrentUser(user))\n        })\n    },\n    findLabelsForUser: (userId) => {\n        LabelService.findLabelsForUser(userId).then(labels => {\n            dispatch(findLabelsForGroup(labels))\n        })\n    },\n    createLabelForUser: (userId, label) => {\n        LabelService.createLabelForUser(userId, label).then(label => {\n            dispatch(createLabel(label))\n        })\n    },\n    createLabelForFolder: (folderId, label) => {\n        LabelService.createLabelForFolder(folderId, label).then(label => {\n            dispatch(createLabel(label))\n        })\n    },\n    deleteLabel: (labelId) => {\n        LabelService.deleteLabel(labelId).then(status => {\n            dispatch(deleteLabel(labelId))\n        })\n    }\n});\nexport default connect(\n    stateToPropertyMapper,\n    dispatchToPropertyMapper\n)(LabelListComponent)"]},"metadata":{},"sourceType":"module"}