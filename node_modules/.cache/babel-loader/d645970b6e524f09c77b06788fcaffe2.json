{"ast":null,"code":"var _jsxFileName = \"/home/davischandram/webdev/cs5610/fork/mind-assistant/src/components/SearchComponent.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport JokeService from \"../services/jokeService\";\nimport { findJokesByKeyword } from \"../actions/jokeActions\";\nimport { connect } from \"react-redux\";\nconst jokeService = new JokeService();\n\nclass SearchComponent extends React.Component {\n  componentDidMount() {\n    this.props.findJokesByKeyword(this.props.criteria);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    console.log(this.props.criteria);\n\n    if (this.props.criteria !== prevProps.criteria) {\n      this.props.findJokesByKeyword(this.props.criteria);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, this.props.jokes && this.props.jokes.map(joke => React.createElement(Link, {\n      to: `/search/${this.props.criteria}/details/${joke.id}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"list-group-item\",\n      key: joke.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, joke.joke))), this.props.jokes < 1 && React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"No results found\")));\n  }\n\n}\n\nconst stateToPropertyMapper = state => ({\n  jokes: state.jokes.jokes\n});\n\nconst dispatchToPropertyMapper = dispatch => ({\n  findJokesByKeyword: keyword => {\n    jokeService.findJokesByKeyword(keyword).then(jokes => {\n      dispatch(findJokesByKeyword(jokes));\n    });\n  }\n});\n\nexport default connect(stateToPropertyMapper, dispatchToPropertyMapper)(SearchComponent);","map":{"version":3,"sources":["/home/davischandram/webdev/cs5610/fork/mind-assistant/src/components/SearchComponent.js"],"names":["React","Link","JokeService","findJokesByKeyword","connect","jokeService","SearchComponent","Component","componentDidMount","props","criteria","componentDidUpdate","prevProps","prevState","snapshot","console","log","render","jokes","map","joke","id","stateToPropertyMapper","state","dispatchToPropertyMapper","dispatch","keyword","then"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAAQC,kBAAR,QAAiC,wBAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,MAAMC,WAAW,GAAG,IAAIH,WAAJ,EAApB;;AAEA,MAAMI,eAAN,SAA8BN,KAAK,CAACO,SAApC,CAA8C;AAC1CC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWN,kBAAX,CAA8B,KAAKM,KAAL,CAAWC,QAAzC;AACH;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AAC/CC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWC,QAAvB;;AACA,QAAG,KAAKD,KAAL,CAAWC,QAAX,KAAwBE,SAAS,CAACF,QAArC,EAA8C;AAC1C,WAAKD,KAAL,CAAWN,kBAAX,CAA8B,KAAKM,KAAL,CAAWC,QAAzC;AACH;AACJ;;AAEDO,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAE,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKR,KAAL,CAAWS,KAAX,IAAoB,KAAKT,KAAL,CAAWS,KAAX,CAAiBC,GAAjB,CAAqBC,IAAI,IAC1C,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,WAAU,KAAKX,KAAL,CAAWC,QAAS,YAAWU,IAAI,CAACC,EAAG,EAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAgC,MAAA,GAAG,EAAED,IAAI,CAACC,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,IAAI,CAACA,IADV,CADJ,CADiB,CADzB,EAQK,KAAKX,KAAL,CAAWS,KAAX,GAAmB,CAAnB,IAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAR7B,CADJ,CADJ;AAcH;;AA3ByC;;AA8B9C,MAAMI,qBAAqB,GAAIC,KAAD,KAAY;AACtCL,EAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,CAAYA;AADmB,CAAZ,CAA9B;;AAGA,MAAMM,wBAAwB,GAAIC,QAAD,KAAe;AAC5CtB,EAAAA,kBAAkB,EAAGuB,OAAD,IAAa;AAC7BrB,IAAAA,WAAW,CAACF,kBAAZ,CAA+BuB,OAA/B,EACKC,IADL,CACUT,KAAK,IAAI;AAACO,MAAAA,QAAQ,CAACtB,kBAAkB,CAACe,KAAD,CAAnB,CAAR;AAAoC,KADxD;AAEH;AAJ2C,CAAf,CAAjC;;AAMA,eAAed,OAAO,CAClBkB,qBADkB,EAElBE,wBAFkB,CAAP,CAGblB,eAHa,CAAf","sourcesContent":["import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport JokeService from \"../services/jokeService\";\r\nimport {findJokesByKeyword} from \"../actions/jokeActions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst jokeService = new JokeService();\r\n\r\nclass SearchComponent extends React.Component {\r\n    componentDidMount() {\r\n        this.props.findJokesByKeyword(this.props.criteria)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        console.log(this.props.criteria);\r\n        if(this.props.criteria !== prevProps.criteria){\r\n            this.props.findJokesByKeyword(this.props.criteria)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"container-fluid\"}>\r\n                <ul className=\"list-group\">\r\n                    {this.props.jokes && this.props.jokes.map(joke =>\r\n                        <Link to={`/search/${this.props.criteria}/details/${joke.id}`}>\r\n                            <li className=\"list-group-item\" key={joke.id} >\r\n                                {joke.joke}\r\n                            </li>\r\n                        </Link>\r\n                    )}\r\n                    {this.props.jokes < 1 && <h1>No results found</h1>}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    jokes: state.jokes.jokes\r\n});\r\nconst dispatchToPropertyMapper = (dispatch) => ({\r\n    findJokesByKeyword: (keyword) => {\r\n        jokeService.findJokesByKeyword(keyword)\r\n            .then(jokes => {dispatch(findJokesByKeyword(jokes))})\r\n    }\r\n});\r\nexport default connect(\r\n    stateToPropertyMapper,\r\n    dispatchToPropertyMapper\r\n)(SearchComponent)"]},"metadata":{},"sourceType":"module"}