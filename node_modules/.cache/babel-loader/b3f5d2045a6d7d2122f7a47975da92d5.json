{"ast":null,"code":"import { CREATE_FOLDER, DELETE_FOLDER, FIND_ALL_FOLDERS, FIND_FOLDER_BY_ID, FIND_FOLDERS_FOR_USER, UPDATE_FOLDER } from \"../actions/folderActions\";\n\nconst folderReducer = (state = {\n  folders: []\n}, action) => {\n  switch (action.type) {\n    case FIND_FOLDERS_FOR_USER:\n      return {\n        folders: action.folders\n      };\n\n    case CREATE_FOLDER:\n      return {\n        folders: [...state.folders, action.folder]\n      };\n\n    case UPDATE_FOLDER:\n      return {\n        folders: state.folders.map(folder => folder.id === action.folderId ? action.folder : folder)\n      };\n\n    case DELETE_FOLDER:\n      return {\n        folders: state.folders.filter(folder => folder.id !== action.folderId)\n      };\n\n    case FIND_ALL_FOLDERS:\n      return {\n        folders: action.folders\n      };\n\n    case FIND_FOLDER_BY_ID:\n      return {\n        folders: action.folder\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default folderReducer;","map":{"version":3,"sources":["/home/davischandram/webdev/cs5610/fork/mind-assistant/src/reducers/folderReducer.js"],"names":["CREATE_FOLDER","DELETE_FOLDER","FIND_ALL_FOLDERS","FIND_FOLDER_BY_ID","FIND_FOLDERS_FOR_USER","UPDATE_FOLDER","folderReducer","state","folders","action","type","folder","map","id","folderId","filter"],"mappings":"AAAA,SACIA,aADJ,EAEIC,aAFJ,EAEmBC,gBAFnB,EAGIC,iBAHJ,EAIIC,qBAJJ,EAKIC,aALJ,QAMO,0BANP;;AAQA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAC;AAACC,EAAAA,OAAO,EAAC;AAAT,CAAP,EAAqBC,MAArB,KAAgC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,qBAAL;AACI,aAAO;AACHI,QAAAA,OAAO,EAAEC,MAAM,CAACD;AADb,OAAP;;AAGJ,SAAKR,aAAL;AACI,aAAO;AACHQ,QAAAA,OAAO,EAAE,CACL,GAAGD,KAAK,CAACC,OADJ,EAELC,MAAM,CAACE,MAFF;AADN,OAAP;;AAMJ,SAAKN,aAAL;AACI,aAAO;AACHG,QAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,CAAcI,GAAd,CAAkBD,MAAM,IAC7BA,MAAM,CAACE,EAAP,KAAcJ,MAAM,CAACK,QAArB,GAAgCL,MAAM,CAACE,MAAvC,GAAgDA,MAD3C;AADN,OAAP;;AAKJ,SAAKV,aAAL;AACI,aAAO;AACHO,QAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,CAAcO,MAAd,CAAqBJ,MAAM,IAAIA,MAAM,CAACE,EAAP,KAAcJ,MAAM,CAACK,QAApD;AADN,OAAP;;AAGJ,SAAKZ,gBAAL;AACI,aAAO;AACHM,QAAAA,OAAO,EAAEC,MAAM,CAACD;AADb,OAAP;;AAGJ,SAAKL,iBAAL;AACI,aAAO;AACHK,QAAAA,OAAO,EAAEC,MAAM,CAACE;AADb,OAAP;;AAGJ;AACI,aAAOJ,KAAP;AA/BR;AAiCH,CAlCD;;AAoCA,eAAeD,aAAf","sourcesContent":["import {\n    CREATE_FOLDER,\n    DELETE_FOLDER, FIND_ALL_FOLDERS,\n    FIND_FOLDER_BY_ID,\n    FIND_FOLDERS_FOR_USER,\n    UPDATE_FOLDER\n} from \"../actions/folderActions\";\n\nconst folderReducer = (state={folders:[]}, action) => {\n    switch (action.type) {\n        case FIND_FOLDERS_FOR_USER:\n            return {\n                folders: action.folders\n            };\n        case CREATE_FOLDER:\n            return {\n                folders: [\n                    ...state.folders,\n                    action.folder\n                ]\n            };\n        case UPDATE_FOLDER:\n            return {\n                folders: state.folders.map(folder =>\n                    folder.id === action.folderId ? action.folder : folder\n                )\n            };\n        case DELETE_FOLDER:\n            return {\n                folders: state.folders.filter(folder => folder.id !== action.folderId)\n            };\n        case FIND_ALL_FOLDERS:\n            return {\n                folders: action.folders\n            };\n        case FIND_FOLDER_BY_ID:\n            return {\n                folders: action.folder\n            };\n        default:\n            return state\n    }\n};\n\nexport default folderReducer"]},"metadata":{},"sourceType":"module"}