{"ast":null,"code":"var _jsxFileName = \"/home/davischandram/webdev/cs5610/mind-assistant/src/components/label/LabelListComponent.js\";\nimport React from 'react';\nimport LabelComponent from './LabelComponent';\nimport '../../App.css';\nimport { findCurrentUser } from \"../../actions/userActions\";\nimport { connect } from \"react-redux\";\nimport userService from \"../../services/userService\";\nimport labelService from \"../../services/labelService\";\nimport { findLabelsForGroup } from \"../../actions/labelActions\";\nconst UserService = new userService();\nconst LabelService = new labelService();\n\nclass LabelListComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: {},\n      label: {\n        id: -1,\n        title: 'New Label'\n      },\n      labels: [{\n        id: 123,\n        title: \"Label 1\"\n      }, {\n        id: 124,\n        title: \"Label 2\"\n      }, {\n        id: 125,\n        title: \"Label 3\"\n      }]\n    };\n\n    this.createLabel = () => {\n      this.state.label.id = new Date().getTime();\n      this.setState({\n        labels: [this.state.label, ...this.state.labels]\n      });\n    };\n\n    this.titleChanged = event => {\n      this.setState({\n        label: {\n          title: event.target.value\n        }\n      });\n    };\n\n    this.deleteLabel = id => {\n      this.setState({\n        labels: this.state.labels.filter(label => label.id !== id)\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.findCurrentUser();\n    this.props.findLabelsForUser(this.props.user.id);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.props.labels > 0 && this.props.labels.map(label => React.createElement(\"div\", {\n      key: label.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(LabelComponent, {\n      label: label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.titleChanged,\n      className: \"form-control\",\n      placeholder: \"New Label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.createLabel,\n      className: \"btn btn-primary btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Add Label\")));\n  }\n\n}\n\nconst stateToPropertyMapper = state => ({\n  user: state.user.user,\n  labels: state.labels.labels\n});\n\nconst dispatchToPropertyMapper = dispatch => ({\n  findCurrentUser: () => {\n    UserService.findCurrentUser().then(user => {\n      dispatch(findCurrentUser(user));\n    });\n  },\n  findLabelsForUser: userId => {\n    LabelService.findLabelsForUser(userId).then(labels => {\n      dispatch(findLabelsForGroup(labels));\n    });\n  }\n});\n\nexport default connect(stateToPropertyMapper, dispatchToPropertyMapper)(LabelListComponent);","map":{"version":3,"sources":["/home/davischandram/webdev/cs5610/mind-assistant/src/components/label/LabelListComponent.js"],"names":["React","LabelComponent","findCurrentUser","connect","userService","labelService","findLabelsForGroup","UserService","LabelService","LabelListComponent","Component","state","user","label","id","title","labels","createLabel","Date","getTime","setState","titleChanged","event","target","value","deleteLabel","filter","componentDidMount","props","findLabelsForUser","render","map","stateToPropertyMapper","dispatchToPropertyMapper","dispatch","then","userId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport LabelComponent from './LabelComponent';\nimport '../../App.css';\nimport {findCurrentUser} from \"../../actions/userActions\";\nimport {connect} from \"react-redux\";\nimport userService from \"../../services/userService\";\nimport labelService from \"../../services/labelService\";\nimport {findLabelsForGroup} from \"../../actions/labelActions\";\n\nconst UserService = new userService();\nconst LabelService = new labelService();\n\nclass LabelListComponent extends React.Component {\n    state = {\n        user: {},\n        label: {\n            id: -1,\n            title: 'New Label'\n        },\n        labels: [\n            {id: 123, title: \"Label 1\"},\n            {id: 124, title: \"Label 2\"},\n            {id: 125, title: \"Label 3\"}\n        ]\n    };\n\n    componentDidMount() {\n        this.props.findCurrentUser();\n        this.props.findLabelsForUser(this.props.user.id)\n    }\n\n    createLabel = () => {\n        this.state.label.id = (new Date()).getTime();\n        this.setState({\n            labels: [this.state.label, ...this.state.labels]\n        })\n    };\n\n    titleChanged = (event) => {\n        this.setState({\n            label: {\n                title: event.target.value\n            }\n        })\n    };\n\n    deleteLabel = (id) => {\n        this.setState({\n            labels: this.state.labels.filter(label => label.id !== id)\n        })\n    };\n\n    render() {\n        return (\n            <div>\n                <ul className=\"list-group\">\n                    {this.props.labels > 0 && this.props.labels.map(label =>\n                        <div key={label.id}>\n                            <LabelComponent\n                                label={label}\n                            />\n                        </div>\n                    )\n                    }\n                </ul>\n                <br/>\n                <div>\n                    <input\n                        type={\"text\"}\n                        onChange={this.titleChanged}\n                        className=\"form-control\"\n                        placeholder={\"New Label\"}\n                    />\n                    <button onClick={this.createLabel}\n                            className=\"btn btn-primary btn-block\">\n                        Add Label\n                    </button>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nconst stateToPropertyMapper = (state) => ({\n    user: state.user.user,\n    labels: state.labels.labels\n});\nconst dispatchToPropertyMapper = (dispatch) => ({\n    findCurrentUser: () => {\n        UserService.findCurrentUser().then(user => {\n            dispatch(findCurrentUser(user))\n        })\n    },\n    findLabelsForUser: (userId) => {\n        LabelService.findLabelsForUser(userId).then(labels => {\n            dispatch(findLabelsForGroup(labels))\n        })\n    }\n});\nexport default connect(\n    stateToPropertyMapper,\n    dispatchToPropertyMapper\n)(LabelListComponent)"]},"metadata":{},"sourceType":"module"}