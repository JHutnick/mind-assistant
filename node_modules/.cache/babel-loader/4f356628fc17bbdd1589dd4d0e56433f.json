{"ast":null,"code":"var _jsxFileName = \"/home/davischandram/webdev/cs5610/mind-assistant/src/components/label/LabelListComponent2.js\";\nimport React from 'react';\nimport '../../App.css';\nimport { connect } from \"react-redux\";\nimport userService from \"../../services/userService\";\nimport { findCurrentUser } from \"../../actions/userActions\";\nimport labelService from \"../../services/labelService\";\nimport LabelComponent from \"./LabelComponent\";\nimport { createLabel, deleteLabel, findLabelsForGroup } from \"../../actions/labelActions\";\nconst UserService = new userService();\nconst LabelService = new labelService();\n\nclass LabelListComponent2 extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: {},\n      labels: [],\n      newTitle: \"\"\n    };\n\n    this.titleChanged = e => {\n      this.setState({\n        newTitle: e.target.value\n      });\n    };\n\n    this.createLabel = () => {\n      this.props.createLabel(this.props.user.id, {\n        title: this.state.newTitle\n      });\n    };\n\n    this.deleteLabel = id => {\n      this.props.deleteLabel(id);\n    };\n  }\n\n  componentDidMount() {\n    this.props.findCurrentUser();\n    console.log(this.props.user); // this.props.findLabelsForUser(this.props.user.id);\n\n    this.props.findLabelsForUser(2);\n    console.log(this.props.labels);\n    this.setState({\n      user: this.props.user\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.user.id !== prevState.user.id) {\n      console.log(\"testing\");\n      this.props.findCurrentUser();\n      this.props.findLabelsForUser(this.props.user.id);\n      this.setState({\n        user: this.props.user,\n        labels: this.props.labels\n      });\n    } // console.log(this.props.user);\n\n\n    console.log(this.props.labels);\n    console.log(this.state.labels);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst stateToPropertyMapper = state => ({\n  user: state.user.user,\n  labels: state.labels.labels\n});\n\nconst dispatchToPropertyMapper = dispatch => ({\n  findCurrentUser: () => {\n    UserService.findCurrentUser().then(user => {\n      dispatch(findCurrentUser(user));\n    });\n  },\n  findLabelsForUser: userId => {\n    LabelService.findLabelsForUser(userId).then(labels => {\n      dispatch(findLabelsForGroup(labels));\n    });\n  },\n  createLabel: (userId, label) => {\n    LabelService.createLabel(userId, label).then(label => {\n      dispatch(createLabel(label));\n    });\n  },\n  deleteLabel: labelId => {\n    LabelService.deleteLabel(labelId).then(status => {\n      dispatch(deleteLabel(labelId));\n    });\n  }\n});\n\nexport default connect(stateToPropertyMapper, dispatchToPropertyMapper)(LabelListComponent2);","map":{"version":3,"sources":["/home/davischandram/webdev/cs5610/mind-assistant/src/components/label/LabelListComponent2.js"],"names":["React","connect","userService","findCurrentUser","labelService","LabelComponent","createLabel","deleteLabel","findLabelsForGroup","UserService","LabelService","LabelListComponent2","Component","state","user","labels","newTitle","titleChanged","e","setState","target","value","props","id","title","componentDidMount","console","log","findLabelsForUser","componentDidUpdate","prevProps","prevState","snapshot","render","stateToPropertyMapper","dispatchToPropertyMapper","dispatch","then","userId","label","labelId","status"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../App.css';\nimport {connect} from \"react-redux\";\nimport userService from \"../../services/userService\";\nimport {findCurrentUser} from \"../../actions/userActions\";\nimport labelService from \"../../services/labelService\";\nimport LabelComponent from \"./LabelComponent\";\nimport {createLabel, deleteLabel, findLabelsForGroup} from \"../../actions/labelActions\";\n\nconst UserService = new userService();\nconst LabelService = new labelService();\n\nclass LabelListComponent2 extends React.Component {\n    state = {\n        user: {},\n        labels: [],\n        newTitle: \"\"\n    };\n\n    componentDidMount() {\n        this.props.findCurrentUser();\n        console.log(this.props.user);\n        // this.props.findLabelsForUser(this.props.user.id);\n        this.props.findLabelsForUser(2);\n        console.log(this.props.labels);\n        this.setState({\n            user: this.props.user\n        })\n\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.props.user.id !== prevState.user.id){\n            console.log(\"testing\");\n            this.props.findCurrentUser();\n            this.props.findLabelsForUser(this.props.user.id);\n            this.setState({\n                user: this.props.user,\n                labels: this.props.labels\n            })\n        }\n        // console.log(this.props.user);\n        console.log(this.props.labels);\n        console.log(this.state.labels)\n    }\n\n    titleChanged = (e) => {\n        this.setState({\n            newTitle: e.target.value\n        })\n    };\n\n    createLabel = () => {\n        this.props.createLabel(this.props.user.id, {title: this.state.newTitle})\n    };\n\n    deleteLabel = (id) => {\n        this.props.deleteLabel(id)\n    };\n\n    render() {\n        return (\n            <div className={\"container\"}>\n                \n            </div>\n        )\n    }\n}\n\nconst stateToPropertyMapper = (state) => ({\n    user: state.user.user,\n    labels: state.labels.labels\n});\nconst dispatchToPropertyMapper = (dispatch) => ({\n    findCurrentUser: () => {\n        UserService.findCurrentUser().then(user => {\n            dispatch(findCurrentUser(user))\n        })\n    },\n    findLabelsForUser: (userId) => {\n        LabelService.findLabelsForUser(userId).then(labels => {\n            dispatch(findLabelsForGroup(labels))\n        })\n    },\n    createLabel: (userId, label) => {\n        LabelService.createLabel(userId,label).then(label => {\n            dispatch(createLabel(label))\n        })\n    },\n    deleteLabel: (labelId) => {\n        LabelService.deleteLabel(labelId).then(status => {\n            dispatch(deleteLabel(labelId))\n        })\n    }\n});\nexport default connect(\n    stateToPropertyMapper,\n    dispatchToPropertyMapper\n)(LabelListComponent2)"]},"metadata":{},"sourceType":"module"}