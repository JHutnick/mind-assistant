{"ast":null,"code":"var _jsxFileName = \"/home/davischandram/webdev/cs5610/mind-assistant/src/components/label/LabelListComponent2.js\";\nimport React from 'react';\nimport '../../App.css';\nimport { connect } from \"react-redux\";\nimport userService from \"../../services/userService\";\nimport { findCurrentUser } from \"../../actions/userActions\";\nimport labelService from \"../../services/labelService\";\nimport LabelComponent from \"./LabelComponent\";\nimport { createLabel, deleteLabel, findLabelsForGroup } from \"../../actions/labelActions\";\nconst UserService = new userService();\nconst LabelService = new labelService();\n\nclass LabelListComponent2 extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newTitle: \"\"\n    };\n\n    this.titleChanged = e => {\n      this.setState({\n        newTitle: e.target.value\n      });\n    };\n\n    this.createLabel = () => {\n      this.props.createLabel(this.props.user.id, {\n        title: this.state.newTitle\n      });\n    };\n\n    this.deleteLabel = id => {\n      this.props.deleteLabel(id);\n    };\n  }\n\n  componentDidMount() {\n    this.props.findCurrentUser(); // this.props.findLabelsForUser(this.props.user.id);\n\n    this.props.findLabelsForUser(2);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    console.log(this.props.labels);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.titleChanged,\n      className: \"form-control\",\n      placeholder: \"New Label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.createLabel,\n      className: \"btn btn-primary btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Add Label\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.props.labels && this.props.labels.map(label => React.createElement(\"div\", {\n      key: label.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(LabelComponent, {\n      label: label,\n      deleteLabel: this.deleteLabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst stateToPropertyMapper = state => ({\n  user: state.user.user,\n  labels: state.labels.labels\n});\n\nconst dispatchToPropertyMapper = dispatch => ({\n  findCurrentUser: () => {\n    UserService.findCurrentUser().then(user => {\n      dispatch(findCurrentUser(user));\n    });\n  },\n  findLabelsForUser: userId => {\n    LabelService.findLabelsForUser(userId).then(labels => {\n      dispatch(findLabelsForGroup(labels));\n    });\n  },\n  createLabel: (userId, label) => {\n    LabelService.createLabel(userId, label).then(label => {\n      dispatch(createLabel(label));\n    });\n  },\n  deleteLabel: labelId => {\n    LabelService.deleteLabel(labelId).then(status => {\n      dispatch(deleteLabel(labelId));\n    });\n  }\n});\n\nexport default connect(stateToPropertyMapper, dispatchToPropertyMapper)(LabelListComponent2);","map":{"version":3,"sources":["/home/davischandram/webdev/cs5610/mind-assistant/src/components/label/LabelListComponent2.js"],"names":["React","connect","userService","findCurrentUser","labelService","LabelComponent","createLabel","deleteLabel","findLabelsForGroup","UserService","LabelService","LabelListComponent2","Component","state","newTitle","titleChanged","e","setState","target","value","props","user","id","title","componentDidMount","findLabelsForUser","componentDidUpdate","prevProps","prevState","snapshot","console","log","labels","render","map","label","stateToPropertyMapper","dispatchToPropertyMapper","dispatch","then","userId","labelId","status"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../App.css';\nimport {connect} from \"react-redux\";\nimport userService from \"../../services/userService\";\nimport {findCurrentUser} from \"../../actions/userActions\";\nimport labelService from \"../../services/labelService\";\nimport LabelComponent from \"./LabelComponent\";\nimport {createLabel, deleteLabel, findLabelsForGroup} from \"../../actions/labelActions\";\n\nconst UserService = new userService();\nconst LabelService = new labelService();\n\nclass LabelListComponent2 extends React.Component {\n    state = {\n        newTitle: \"\"\n    };\n\n    componentDidMount() {\n        this.props.findCurrentUser();\n        // this.props.findLabelsForUser(this.props.user.id);\n        this.props.findLabelsForUser(2);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        console.log(this.props.labels)\n    }\n\n    titleChanged = (e) => {\n        this.setState({\n            newTitle: e.target.value\n        })\n    };\n\n    createLabel = () => {\n        this.props.createLabel(this.props.user.id, {title: this.state.newTitle})\n    };\n\n    deleteLabel = (id) => {\n        this.props.deleteLabel(id)\n    };\n\n    render() {\n        return (\n            <div className={\"container\"}>\n                <div className={\"row\"}>\n                    <input\n                        onChange={this.titleChanged}\n                        className=\"form-control\"\n                        placeholder={\"New Label\"}\n                    />\n                </div>\n                <div className={\"row\"}>\n                    <button onClick={this.createLabel} className=\"btn btn-primary btn-block\">\n                        Add Label\n                    </button>\n                </div>\n                <br/>\n                <div className={\"row\"}>\n                    {this.props.labels && this.props.labels.map(label =>\n                        <div key={label.id}>\n                            <LabelComponent\n                                label={label}\n                                deleteLabel={this.deleteLabel}\n                            />\n                        </div>\n                    )}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst stateToPropertyMapper = (state) => ({\n    user: state.user.user,\n    labels: state.labels.labels\n});\nconst dispatchToPropertyMapper = (dispatch) => ({\n    findCurrentUser: () => {\n        UserService.findCurrentUser().then(user => {\n            dispatch(findCurrentUser(user))\n        })\n    },\n    findLabelsForUser: (userId) => {\n        LabelService.findLabelsForUser(userId).then(labels => {\n            dispatch(findLabelsForGroup(labels))\n        })\n    },\n    createLabel: (userId, label) => {\n        LabelService.createLabel(userId,label).then(label => {\n            dispatch(createLabel(label))\n        })\n    },\n    deleteLabel: (labelId) => {\n        LabelService.deleteLabel(labelId).then(status => {\n            dispatch(deleteLabel(labelId))\n        })\n    }\n});\nexport default connect(\n    stateToPropertyMapper,\n    dispatchToPropertyMapper\n)(LabelListComponent2)"]},"metadata":{},"sourceType":"module"}