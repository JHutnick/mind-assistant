{"ast":null,"code":"var _jsxFileName = \"/home/davischandram/webdev/cs5610/mind-assistant/src/components/SearchComponent.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport JokeService from \"../services/jokeService\";\nimport { findJokesByKeyword } from \"../actions/jokeActions\";\nimport { connect } from \"react-redux\";\nconst jokeService = new JokeService();\n\nclass SearchComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    // this.props.history.push(`/search/${this.props.keyword}`);\n    // this.setState({\n    //     results: this.props.jokes\n    // })\n    this.props.findJokesByKeyword(this.props.criteria);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, this.props.jokes && this.props.jokes.map(joke => React.createElement(Link, {\n      to: `/search/${this.props.criteria}/details/${joke.id}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"list-group-item\",\n      key: joke.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, joke.joke))), this.props.jokes < 1 && React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"No results found for \", this.props.criteria)));\n  }\n\n}\n\nconst stateToPropertyMapper = state => ({\n  jokes: state.jokes.jokes\n});\n\nconst dispatchToPropertyMapper = dispatch => ({\n  findJokesByKeyword: keyword => {\n    jokeService.findJokesByKeyword(keyword).then(jokes => {\n      dispatch(findJokesByKeyword(jokes));\n    });\n  }\n});\n\nexport default connect(stateToPropertyMapper, dispatchToPropertyMapper)(SearchComponent);","map":{"version":3,"sources":["/home/davischandram/webdev/cs5610/mind-assistant/src/components/SearchComponent.js"],"names":["React","Link","JokeService","findJokesByKeyword","connect","jokeService","SearchComponent","Component","constructor","props","state","componentDidMount","criteria","render","jokes","map","joke","id","stateToPropertyMapper","dispatchToPropertyMapper","dispatch","keyword","then"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAAQC,kBAAR,QAAiC,wBAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,MAAMC,WAAW,GAAG,IAAIH,WAAJ,EAApB;;AAEA,MAAMI,eAAN,SAA8BN,KAAK,CAACO,SAApC,CAA8C;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB;AACA;AACA;AACA;AACA,SAAKF,KAAL,CAAWN,kBAAX,CAA8B,KAAKM,KAAL,CAAWG,QAAzC;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAE,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKJ,KAAL,CAAWK,KAAX,IAAoB,KAAKL,KAAL,CAAWK,KAAX,CAAiBC,GAAjB,CAAqBC,IAAI,IAC1C,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,WAAU,KAAKP,KAAL,CAAWG,QAAS,YAAWI,IAAI,CAACC,EAAG,EAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAgC,MAAA,GAAG,EAAED,IAAI,CAACC,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,IAAI,CAACA,IADV,CADJ,CADiB,CADzB,EAQK,KAAKP,KAAL,CAAWK,KAAX,GAAmB,CAAnB,IAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAA0B,KAAKL,KAAL,CAAWG,QAArC,CAR7B,CADJ,CADJ;AAcH;;AA7ByC;;AAgC9C,MAAMM,qBAAqB,GAAIR,KAAD,KAAY;AACtCI,EAAAA,KAAK,EAAEJ,KAAK,CAACI,KAAN,CAAYA;AADmB,CAAZ,CAA9B;;AAGA,MAAMK,wBAAwB,GAAIC,QAAD,KAAe;AAC5CjB,EAAAA,kBAAkB,EAAGkB,OAAD,IAAa;AAC7BhB,IAAAA,WAAW,CAACF,kBAAZ,CAA+BkB,OAA/B,EACKC,IADL,CACUR,KAAK,IAAI;AAACM,MAAAA,QAAQ,CAACjB,kBAAkB,CAACW,KAAD,CAAnB,CAAR;AAAoC,KADxD;AAEH;AAJ2C,CAAf,CAAjC;;AAMA,eAAeV,OAAO,CAClBc,qBADkB,EAElBC,wBAFkB,CAAP,CAGbb,eAHa,CAAf","sourcesContent":["import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport JokeService from \"../services/jokeService\";\r\nimport {findJokesByKeyword} from \"../actions/jokeActions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst jokeService = new JokeService();\r\n\r\nclass SearchComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.props.history.push(`/search/${this.props.keyword}`);\r\n        // this.setState({\r\n        //     results: this.props.jokes\r\n        // })\r\n        this.props.findJokesByKeyword(this.props.criteria)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"container-fluid\"}>\r\n                <ul className=\"list-group\">\r\n                    {this.props.jokes && this.props.jokes.map(joke =>\r\n                        <Link to={`/search/${this.props.criteria}/details/${joke.id}`}>\r\n                            <li className=\"list-group-item\" key={joke.id} >\r\n                                {joke.joke}\r\n                            </li>\r\n                        </Link>\r\n                    )}\r\n                    {this.props.jokes < 1 && <h1>No results found for {this.props.criteria}</h1>}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    jokes: state.jokes.jokes\r\n});\r\nconst dispatchToPropertyMapper = (dispatch) => ({\r\n    findJokesByKeyword: (keyword) => {\r\n        jokeService.findJokesByKeyword(keyword)\r\n            .then(jokes => {dispatch(findJokesByKeyword(jokes))})\r\n    }\r\n});\r\nexport default connect(\r\n    stateToPropertyMapper,\r\n    dispatchToPropertyMapper\r\n)(SearchComponent)"]},"metadata":{},"sourceType":"module"}