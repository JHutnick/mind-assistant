{"ast":null,"code":"import { CREATE_FOLDER, DELETE_FOLDER, FIND_ALL_FOLDERS, FIND_FOLDER_BY_ID, FIND_FOLDERS_FOR_USER, UPDATE_FOLDER } from \"../actions/folderActions\";\n\nconst folderReducer = (state = {}, action) => {\n  switch (action.type) {\n    case FIND_FOLDERS_FOR_USER:\n      console.log(action.folders);\n      return {\n        folders: action.folders\n      };\n\n    case CREATE_FOLDER:\n      return {\n        folders: [...state.folders, action.folder]\n      };\n\n    case UPDATE_FOLDER:\n      return {\n        folders: state.folders.map(folder => folder.id === action.folderId ? action.folder : folder)\n      };\n\n    case DELETE_FOLDER:\n      return {\n        folders: state.folders.filter(folder => folder.id !== action.folderId)\n      };\n\n    case FIND_ALL_FOLDERS:\n      return {\n        folders: action.folders\n      };\n\n    case FIND_FOLDER_BY_ID:\n      return {\n        folders: action.folder\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default folderReducer;","map":{"version":3,"sources":["/home/davischandram/webdev/cs5610/mind-assistant/src/reducers/folderReducer.js"],"names":["CREATE_FOLDER","DELETE_FOLDER","FIND_ALL_FOLDERS","FIND_FOLDER_BY_ID","FIND_FOLDERS_FOR_USER","UPDATE_FOLDER","folderReducer","state","action","type","console","log","folders","folder","map","id","folderId","filter"],"mappings":"AAAA,SACIA,aADJ,EAEIC,aAFJ,EAEmBC,gBAFnB,EAGIC,iBAHJ,EAIIC,qBAJJ,EAKIC,aALJ,QAMO,0BANP;;AAQA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAC,EAAP,EAAWC,MAAX,KAAsB;AACxC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKL,qBAAL;AACIM,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAnB;AACA,aAAO;AACHA,QAAAA,OAAO,EAAEJ,MAAM,CAACI;AADb,OAAP;;AAGJ,SAAKZ,aAAL;AACI,aAAO;AACHY,QAAAA,OAAO,EAAE,CACL,GAAGL,KAAK,CAACK,OADJ,EAELJ,MAAM,CAACK,MAFF;AADN,OAAP;;AAMJ,SAAKR,aAAL;AACI,aAAO;AACHO,QAAAA,OAAO,EAAEL,KAAK,CAACK,OAAN,CAAcE,GAAd,CAAkBD,MAAM,IAC7BA,MAAM,CAACE,EAAP,KAAcP,MAAM,CAACQ,QAArB,GAAgCR,MAAM,CAACK,MAAvC,GAAgDA,MAD3C;AADN,OAAP;;AAKJ,SAAKZ,aAAL;AACI,aAAO;AACHW,QAAAA,OAAO,EAAEL,KAAK,CAACK,OAAN,CAAcK,MAAd,CAAqBJ,MAAM,IAAIA,MAAM,CAACE,EAAP,KAAcP,MAAM,CAACQ,QAApD;AADN,OAAP;;AAGJ,SAAKd,gBAAL;AACI,aAAO;AACHU,QAAAA,OAAO,EAAEJ,MAAM,CAACI;AADb,OAAP;;AAGJ,SAAKT,iBAAL;AACI,aAAO;AACHS,QAAAA,OAAO,EAAEJ,MAAM,CAACK;AADb,OAAP;;AAGJ;AACI,aAAON,KAAP;AAhCR;AAkCH,CAnCD;;AAqCA,eAAeD,aAAf","sourcesContent":["import {\n    CREATE_FOLDER,\n    DELETE_FOLDER, FIND_ALL_FOLDERS,\n    FIND_FOLDER_BY_ID,\n    FIND_FOLDERS_FOR_USER,\n    UPDATE_FOLDER\n} from \"../actions/folderActions\";\n\nconst folderReducer = (state={}, action) => {\n    switch (action.type) {\n        case FIND_FOLDERS_FOR_USER:\n            console.log(action.folders);\n            return {\n                folders: action.folders\n            };\n        case CREATE_FOLDER:\n            return {\n                folders: [\n                    ...state.folders,\n                    action.folder\n                ]\n            };\n        case UPDATE_FOLDER:\n            return {\n                folders: state.folders.map(folder =>\n                    folder.id === action.folderId ? action.folder : folder\n                )\n            };\n        case DELETE_FOLDER:\n            return {\n                folders: state.folders.filter(folder => folder.id !== action.folderId)\n            };\n        case FIND_ALL_FOLDERS:\n            return {\n                folders: action.folders\n            };\n        case FIND_FOLDER_BY_ID:\n            return {\n                folders: action.folder\n            };\n        default:\n            return state\n    }\n};\n\nexport default folderReducer"]},"metadata":{},"sourceType":"module"}