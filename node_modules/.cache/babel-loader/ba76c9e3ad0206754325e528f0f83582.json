{"ast":null,"code":"var _jsxFileName = \"/home/davischandram/webdev/cs5610/mind-assistant/src/components/SearchDetailsComponent.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport JokeService from \"../services/jokeService\";\nimport { findJoke } from \"../actions/jokeActions\";\nimport { connect } from \"react-redux\";\nconst jokeService = new JokeService();\n\nclass SearchDetailsComponent extends React.Component {\n  componentDidMount() {\n    this.props.findJokeById(this.props.resultId);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, this.props.joke), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Users who have saved this joke:\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/profiles/user1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"User 1\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/profiles/user2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"User 2\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/profiles/user3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"User 3\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/profiles/user4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"User 4\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/profiles/user5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"User 5\"))), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Other public jokes:\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/labels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Label 1\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/labels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Label 2\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/labels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Label 3\"))));\n  }\n\n}\n\nconst stateToPropertyMapper = state => ({\n  joke: state.jokes.joke\n});\n\nconst dispatchToPropertyMapper = dispatch => ({\n  findJokeById: jokeID => {\n    jokeService.findJokeById(jokeID).then(joke => {\n      dispatch(findJoke(joke));\n    });\n  }\n});\n\nexport default connect(stateToPropertyMapper, dispatchToPropertyMapper)(SearchDetailsComponent);","map":{"version":3,"sources":["/home/davischandram/webdev/cs5610/mind-assistant/src/components/SearchDetailsComponent.js"],"names":["React","Link","JokeService","findJoke","connect","jokeService","SearchDetailsComponent","Component","componentDidMount","props","findJokeById","resultId","render","joke","stateToPropertyMapper","state","jokes","dispatchToPropertyMapper","dispatch","jokeID","then"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport JokeService from \"../services/jokeService\";\r\nimport {findJoke} from \"../actions/jokeActions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst jokeService = new JokeService();\r\n\r\nclass SearchDetailsComponent extends React.Component {\r\n    componentDidMount() {\r\n        this.props.findJokeById(this.props.resultId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"container-fluid\"}>\r\n                <h1>{this.props.joke}</h1>\r\n                <br/>\r\n                <h5>Users who have saved this joke:</h5>\r\n                <ul>\r\n                    {/*\r\n                    Below should be fetched from local API\r\n                    Find users that currently have the particular resultId saved as public note\r\n                    */}\r\n                    <li>\r\n                        <Link to={\"/profiles/user1\"}>\r\n                            User 1\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to={\"/profiles/user2\"}>\r\n                            User 2\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to={\"/profiles/user3\"}>\r\n                            User 3\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to={\"/profiles/user4\"}>\r\n                            User 4\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to={\"/profiles/user5\"}>\r\n                            User 5\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n\r\n                <h5>Other public jokes:</h5>\r\n                <ul>\r\n                    {/*\r\n                    Below should be fetched from local API\r\n                    Find users that currently have the particular resultId saved as public note\r\n                    */}\r\n                    <li>\r\n                        <Link to={\"/labels\"}>\r\n                            Label 1\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to={\"/labels\"}>\r\n                            Label 2\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to={\"/labels\"}>\r\n                            Label 3\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    joke: state.jokes.joke\r\n});\r\nconst dispatchToPropertyMapper = (dispatch) => ({\r\n    findJokeById: (jokeID) => {\r\n        jokeService.findJokeById(jokeID)\r\n            .then(joke => {dispatch(findJoke(joke))})\r\n    }\r\n});\r\nexport default connect(\r\n    stateToPropertyMapper,\r\n    dispatchToPropertyMapper\r\n)(SearchDetailsComponent)"]},"metadata":{},"sourceType":"module"}