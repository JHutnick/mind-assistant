{"ast":null,"code":"var _jsxFileName = \"/Users/jhutnick/Documents/github/mind-assistant/src/components/DefaultLayoutComponent.js\";\nimport React from 'react';\nimport '../App.css';\nimport LabelListComponent from \"./label/LabelListComponent\";\nimport NoteListComponent from \"./note/NoteListComponent\";\nimport { connect } from \"react-redux\";\nimport userService from \"../services/userService\"; // const UserService = new userService();\n\nclass DefaultLayoutComponent extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(LabelListComponent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(NoteListComponent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst stateToPropertyMapper = state => ({\n  user: state.user.user\n}); //     const dispatchToPropertyMapper = (dispatch) => ({\n//     findCurrentUser: () => {\n//         UserService.findCurrentUser().then(user => {\n//             dispatch(findCurrentUser(user))\n//         })\n//     },\n//     findFoldersForUser: (userId) => {\n//         FolderService.findFoldersForUser(userId).then(folders => {\n//             dispatch(findFoldersForUser(folders))\n//         })\n//     },\n//     createFolder: (userId, folder) => {\n//         FolderService.createFolder(userId,folder).then(folder => {\n//             dispatch(createFolder(folder))\n//         })\n//     },\n//     deleteFolder: (folderId) => {\n//         FolderService.deleteFolder(folderId).then(status => {\n//             dispatch(deleteFolder(folderId))\n//         })\n//     }\n// });\n\n\nexport default connect(stateToPropertyMapper // dispatchToPropertyMapper\n)(DefaultLayoutComponent);","map":{"version":3,"sources":["/Users/jhutnick/Documents/github/mind-assistant/src/components/DefaultLayoutComponent.js"],"names":["React","LabelListComponent","NoteListComponent","connect","userService","DefaultLayoutComponent","Component","render","stateToPropertyMapper","state","user"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,kBAAP,MAA+B,4BAA/B;AACA,OAAOC,iBAAP,MAA8B,0BAA9B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,yBAAxB,C,CAEA;;AAEA,MAAMC,sBAAN,SAAqCL,KAAK,CAACM,SAA3C,CAAqD;AACjDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,SAAS,EAAE,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAII;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,EAOI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAPJ,CAFJ,CADJ;AAgBH;;AAlBgD;;AAqBrD,MAAMC,qBAAqB,GAAIC,KAAD,KAAY;AACtCC,EAAAA,IAAI,EAAED,KAAK,CAACC,IAAN,CAAWA;AADqB,CAAZ,CAA9B,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAeP,OAAO,CAClBK,qBADkB,CAElB;AAFkB,CAAP,CAGbH,sBAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\nimport LabelListComponent from \"./label/LabelListComponent\";\r\nimport NoteListComponent from \"./note/NoteListComponent\";\r\nimport {connect} from \"react-redux\";\r\nimport userService from \"../services/userService\";\r\n\r\n// const UserService = new userService();\r\n\r\nclass DefaultLayoutComponent extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <br/>\r\n                <div className={\"row\"}>\r\n                    <div className=\"col-1\">\r\n\r\n                    </div>\r\n                    <div className=\"col-2\">\r\n                        <LabelListComponent/>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <NoteListComponent/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    user: state.user.user\r\n});\r\n//     const dispatchToPropertyMapper = (dispatch) => ({\r\n//     findCurrentUser: () => {\r\n//         UserService.findCurrentUser().then(user => {\r\n//             dispatch(findCurrentUser(user))\r\n//         })\r\n//     },\r\n//     findFoldersForUser: (userId) => {\r\n//         FolderService.findFoldersForUser(userId).then(folders => {\r\n//             dispatch(findFoldersForUser(folders))\r\n//         })\r\n//     },\r\n//     createFolder: (userId, folder) => {\r\n//         FolderService.createFolder(userId,folder).then(folder => {\r\n//             dispatch(createFolder(folder))\r\n//         })\r\n//     },\r\n//     deleteFolder: (folderId) => {\r\n//         FolderService.deleteFolder(folderId).then(status => {\r\n//             dispatch(deleteFolder(folderId))\r\n//         })\r\n//     }\r\n// });\r\nexport default connect(\r\n    stateToPropertyMapper\r\n    // dispatchToPropertyMapper\r\n)(DefaultLayoutComponent)\r\n"]},"metadata":{},"sourceType":"module"}