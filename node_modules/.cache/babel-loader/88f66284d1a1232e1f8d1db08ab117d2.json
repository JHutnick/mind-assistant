{"ast":null,"code":"var _jsxFileName = \"/home/davischandram/webdev/cs5610/fork/mind-assistant/src/components/RegisterComponent.js\";\nimport React from \"react\";\nimport userService from \"../services/userService\";\nimport { createUser } from \"../actions/userActions\";\nimport { connect } from \"react-redux\";\nconst UserService = new userService();\n\nclass RegisterComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: {\n        username: \"\",\n        password: \"\",\n        verify: \"\"\n      }\n    };\n\n    this.updateUsername = e => {\n      this.setState({\n        user: {\n          username: e.target.value\n        }\n      });\n    };\n\n    this.updatePassword = e => {\n      this.setState({\n        user: {\n          password: e.target.value\n        }\n      });\n    };\n\n    this.updateVerify = e => {\n      this.setState({\n        user: {\n          verify: e.target.value\n        }\n      });\n    };\n\n    this.register = () => {\n      this.props.createUser(this.state.user);\n      this.props.history.push(\"/profile\");\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Register\"), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"usernameFld\",\n      className: \"col-sm-2 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"usernameFld\",\n      placeholder: \"Alice\",\n      value: this.state.user.username,\n      onChange: this.updateUsername,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"passwordFld\",\n      className: \"col-sm-2 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control \",\n      id: \"passwordFld\",\n      placeholder: \"123qwe#$%\",\n      value: this.state.user.password,\n      onChange: this.updatePassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"verifyPasswordFld\",\n      className: \"col-sm-2 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Verify Password\"), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control \",\n      id: \"verifyPasswordFld\",\n      placeholder: \"123qwe#$%\",\n      value: this.state.user.verify,\n      onChange: this.updateVerify,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-2 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary btn-block\",\n      onClick: this.register,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Sign Up\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Login\")))));\n  }\n\n}\n\nconst stateToPropertyMapper = state => ({\n  user: state.user.user\n});\n\nconst dispatchToPropertyMapper = dispatch => ({\n  createUser: user => {\n    UserService.createUser(user).then(status => {\n      dispatch(createUser(user));\n    });\n  }\n});\n\nexport default connect(stateToPropertyMapper, dispatchToPropertyMapper)(RegisterComponent);","map":{"version":3,"sources":["/home/davischandram/webdev/cs5610/fork/mind-assistant/src/components/RegisterComponent.js"],"names":["React","userService","createUser","connect","UserService","RegisterComponent","Component","state","user","username","password","verify","updateUsername","e","setState","target","value","updatePassword","updateVerify","register","props","history","push","render","stateToPropertyMapper","dispatchToPropertyMapper","dispatch","then","status"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport userService from \"../services/userService\";\r\nimport {createUser} from \"../actions/userActions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst UserService = new userService();\r\n\r\nclass RegisterComponent extends React.Component{\r\n    state = {\r\n        user: {\r\n            username: \"\",\r\n            password: \"\",\r\n            verify: \"\"\r\n        }\r\n    };\r\n\r\n    updateUsername = (e) => {\r\n        this.setState({\r\n            user: {username: e.target.value}\r\n        })\r\n    };\r\n\r\n    updatePassword = (e) => {\r\n        this.setState({\r\n            user: {password: e.target.value}\r\n        })\r\n    };\r\n\r\n    updateVerify = (e) => {\r\n        this.setState({\r\n            user: {verify: e.target.value}\r\n        })\r\n    };\r\n\r\n    register = () => {\r\n        this.props.createUser(this.state.user);\r\n        this.props.history.push(\"/profile\")\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h1>Register</h1>\r\n\r\n                {/*Username field with example*/}\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"usernameFld\"\r\n                           className=\"col-sm-2 col-form-label\">\r\n                        Username\r\n                    </label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"text\"\r\n                               className=\"form-control\"\r\n                               id=\"usernameFld\"\r\n                               placeholder=\"Alice\"\r\n                               value={this.state.user.username}\r\n                               onChange={this.updateUsername}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                {/*Password field with example*/}\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"passwordFld\"\r\n                           className=\"col-sm-2 col-form-label\">\r\n                        Password\r\n                    </label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"password\"\r\n                               className=\"form-control \"\r\n                               id=\"passwordFld\"\r\n                               placeholder=\"123qwe#$%\"\r\n                               value={this.state.user.password}\r\n                               onChange={this.updatePassword}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                {/*Verify password field with example*/}\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"verifyPasswordFld\"\r\n                           className=\"col-sm-2 col-form-label\">\r\n                        Verify Password\r\n                    </label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"password\"\r\n                               className=\"form-control \"\r\n                               id=\"verifyPasswordFld\"\r\n                               placeholder=\"123qwe#$%\"\r\n                               value={this.state.user.verify}\r\n                               onChange={this.updateVerify}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                {/*Buttons for signing up or logging in*/}\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-2 col-form-label\"></div>\r\n                    <div className=\"col-sm-10\">\r\n                        <button className=\"btn btn-primary btn-block\"\r\n                           onClick={this.register}>\r\n                            Sign Up\r\n                        </button>\r\n                        <div>\r\n                            <a href=\"/login\">\r\n                                Login</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    user: state.user.user\r\n});\r\nconst dispatchToPropertyMapper = (dispatch) => ({\r\n    createUser: (user) => {\r\n        UserService.createUser(user).then(status => {\r\n            dispatch(createUser(user))\r\n        })\r\n    }\r\n});\r\nexport default connect(\r\n    stateToPropertyMapper,\r\n    dispatchToPropertyMapper\r\n)(RegisterComponent)"]},"metadata":{},"sourceType":"module"}